#!/bin/bash

set -e

realpath() {
 [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

: "${SIGNING_KEY:="$HOME/.nextcloud/certificates/keeweb.key"}"
version="$1"

if [ -z "$version" ]; then
  echo "Usage: bin/release version"
  exit 1
fi

if [ -z "$NC_AUTH_TOKEN" ]; then
  echo "NC_AUTH_TOKEN is unset, required to push to the appstore"
  exit 1
fi

if [ ! -f "$SIGNING_KEY" ]; then
  echo "$SIGNING_KEY does not exist, required to push to the appstore"
  exit 1
fi


cd "$(dirname "$(realpath "$0")")/.."

if ! grep "nextcloud-keeweb ($version)" keeweb/CHANGELOG.md >/dev/null; then
  echo "No entries for $version in changelog, aborting."
  exit 1
fi

bin/build

sed -i -e "s|tar xvf keeweb-.\+\.tar\.gz|tar xvf keeweb-$version.tar.gz|" README.md
sed -i -e "s|<version>.\+</version>|<version>$version</version>|" keeweb/appinfo/info.xml

git commit -m "Release $version" README.md keeweb/CHANGELOG.md keeweb/appinfo/info.xml || true
git tag "v$version"
git push origin master "+v$version"

pushd keeweb
make appstore
popd

tarball="keeweb/build/artifacts/appstore/keeweb-$version.tar.gz"
mv keeweb/build/artifacts/appstore/keeweb.tar.gz "$tarball"

changelog="$(ruby << EOF
puts File.readlines('keeweb/CHANGELOG.md')
         .drop_while {|line| line.strip != 'nextcloud-keeweb ($version)' }
         .drop(1)
         .take_while {|line| line.start_with?('* ') }
EOF
)"

cat > /tmp/release_notes << EOF
v$version

$changelog
EOF

gh release create "v$version" -F /tmp/release_notes
gh release upload "v$version" "$tarball"
rm /tmp/release_notes

bin/publish v$version "$tarball"
